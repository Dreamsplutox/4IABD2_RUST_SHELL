{"message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1645,"byte_end":1651,"line_start":56,"line_end":56,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":5,"highlight_end":11}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\main.rs","byte_start":248,"byte_end":1631,"line_start":13,"line_end":54,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    loop{","highlight_start":5,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // ECRITURE sur la STDOUT","highlight_start":1,"highlight_end":34},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            let mut handle = stdout.lock(); // STDOUT locked","highlight_start":1,"highlight_end":61},{"text":"            handle.write_all(b\"> \")?; // locked","highlight_start":1,"highlight_end":48},{"text":"            handle.flush()? // locked","highlight_start":1,"highlight_end":38},{"text":"        } // STDOUT unlocked","highlight_start":1,"highlight_end":29},{"text":"        ","highlight_start":1,"highlight_end":9},{"text":"        ","highlight_start":1,"highlight_end":9},{"text":"        let mut user_input = String::with_capacity(256);","highlight_start":1,"highlight_end":57},{"text":"        // On prends un référence mutable","highlight_start":1,"highlight_end":42},{"text":"        stdin.read_line(&mut user_input)?;","highlight_start":1,"highlight_end":43},{"text":"        let user_input = user_input.trim_end();","highlight_start":1,"highlight_end":48},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Récupération des éléments entrés dans un vecteur","highlight_start":1,"highlight_end":60},{"text":"        let mut i = 0;","highlight_start":1,"highlight_end":23},{"text":"        let mut vec = Vec::new();","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        for token in user_input.split_whitespace(){","highlight_start":1,"highlight_end":52},{"text":"            vec.push(token);","highlight_start":1,"highlight_end":29},{"text":"            println!(\"vec {} {}\",i,vec[i]);","highlight_start":1,"highlight_end":44},{"text":"            i+=1;","highlight_start":1,"highlight_end":18},{"text":"         }","highlight_start":1,"highlight_end":11},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //let mut arguments = Vec::with_capacity(3);","highlight_start":1,"highlight_end":53},{"text":"        //arguments.copy_from_slice(&vec[1..]);","highlight_start":1,"highlight_end":48},{"text":"        println!(\"OKTAMERBRO !\");","highlight_start":1,"highlight_end":34},{"text":"        //-----------------------//","highlight_start":1,"highlight_end":36},{"text":"        // Executer une commande //","highlight_start":1,"highlight_end":36},{"text":"        //-----------------------//","highlight_start":1,"highlight_end":36},{"text":"        let output = Command::new(vec[0]).args(&vec[1..]).output()?;","highlight_start":1,"highlight_end":69},{"text":"        //afficher statut commande","highlight_start":1,"highlight_end":35},{"text":"        println!(\"status : {}\", output.status);","highlight_start":1,"highlight_end":48},{"text":"        let stdout = io::stdout().write_all(&output.stdout);","highlight_start":1,"highlight_end":61},{"text":"        ","highlight_start":1,"highlight_end":9},{"text":"        //println!(\"stdout : {:?}\", stdout);","highlight_start":1,"highlight_end":45},{"text":"        println!(\"stderr : {:?}\", output.stderr);","highlight_start":1,"highlight_end":50},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        //? sert à \"propager l'erreur\"","highlight_start":1,"highlight_end":39},{"text":"        // c'est mieux que crash avec un unwrap ou expect ;)","highlight_start":1,"highlight_end":61},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:56:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    loop{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // ECRITURE sur la STDOUT\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // c'est mieux que crash avec un unwrap ou expect ;)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m        \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    Ok(())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `stdout`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1371,"byte_end":1377,"line_start":47,"line_end":47,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let stdout = io::stdout().write_all(&output.stdout);","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider prefixing with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1371,"byte_end":1377,"line_start":47,"line_end":47,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"        let stdout = io::stdout().write_all(&output.stdout);","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":"_stdout","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `stdout`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:47:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let stdout = io::stdout().write_all(&output.stdout);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: consider prefixing with an underscore: `_stdout`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
